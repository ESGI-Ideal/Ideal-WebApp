version: 2
jobs:
  build:
    docker:
      - image: circleci/node:9.11.2
    working_directory: ~/repo
    environment:
      NODE_ENV: "production"
    steps:
      - checkout
      - restore_cache:
          keys:
          #- v1-dependencies-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-{{ .Branch }}
          - v1-dependencies-
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest-5'
      - run:
          name: Node version
          command: node --version
      - run:
          name: NPM version
          command: npm --version
      - run:
          name: NPM Install
          command: npm ci --dev
      #- run:
      #    command: |
      #      mkdir -p ~/reports
      #      eslint ./src/ --format junit --output-file ~/reports/eslint.xml
      #    when: always
      - run:
          name: Build dist
          command: npm run ci
      - store_artifacts:
          path: dist/
      - save_cache:
          paths:
            - ~/.npm
            #- node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
  #test:
  #  docker:
  #    - image: circleci/node:9.11.1
  #  working_directory: ~/repo
  #  steps:
  #    - checkout
  #    - run:
  #        name: Test
  #        command: npm test
  #    - run:
  #        name: Generate code coverage
  #        command: './node_modules/.bin/nyc report --reporter=text-lcov'
  #    - store_artifacts:
  #        path: test-results.xml
  #        prefix: tests
  #    - store_artifacts:
  #        path: coverage
  #        prefix: coverage
  #    - store_test_results:
  #        path: test-results.xml
  #    - store_test_results:
  #        path: ~/reports
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      #- test
      #    requires:
      #      - build
      #    filters:
      #      branches:
      #        only: master
      #- publish:
      #    filters:
      #      tags:
      #        only: /v[0-9]+(\.[0-9]+)*/
